// <auto-generated/>

using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
using MakeMovies.Api.Meta.Tmdb.Three.Configuration;
using MakeMovies.Api.Meta.Tmdb.Three.Find;

namespace MakeMovies.Api.Meta.Tmdb.Three {
    /// <summary>
    /// Builds and executes requests for operations under \3
    /// </summary>
    public class ThreeRequestBuilder : BaseRequestBuilder {
        /// <summary>The configuration property</summary>
        public ConfigurationRequestBuilder Configuration { get =>
            new ConfigurationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The find property</summary>
        public FindRequestBuilder Find { get =>
            new FindRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new ThreeRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ThreeRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/3", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new ThreeRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ThreeRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/3", rawUrl) {
        }
    }
}
